services:
  app:
    container_name: inkr_app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    working_dir: /var/www/html
    environment:
      - DB_HOST=db
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - migrations
    networks:
      - inkr_network

  migrations:
    container_name: inkr_migrations
    build:
      context: .
      dockerfile: ./.docker/Dockerfile.app
    command: php artisan migrate
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    environment:
      - DB_HOST=db
    networks:
      - inkr_network
    depends_on:
      db:
        condition: service_healthy

  webserver:
    image: nginx:alpine
    container_name: inkr_webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx:/etc/nginx/conf.d
    networks:
      - inkr_network
    depends_on:
      - app

  db:
    image: mysql:8
    container_name: inkr_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inkr_db
      MYSQL_USER: inkr_user
      MYSQL_PASSWORD: inkr_pass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - inkr_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  inkr_network:
    driver: bridge

volumes:
  db_data:
